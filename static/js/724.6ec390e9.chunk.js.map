{"version":3,"file":"static/js/724.6ec390e9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactListtem/ContactListItem.module.css?f603","components/ContactListtem/ContactListItem.jsx","webpack://react-homework-template/./src/components/FormEdit/Edit.module.css?702b","components/FormEdit/ModalEdit.jsx","components/FormEdit/FormEdit.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/ContactList/ContactsList.jsx","webpack://react-homework-template/./src/components/AddBtn/AddBtn.module.css?5a6c","components/AddBtn/AddBtn.jsx","pages/Contacts.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ContactList_List__gG+lN\",\"Item\":\"ContactList_Item__Yiq5T\",\"Spinner\":\"ContactList_Spinner__a2lwS\"};","// extracted by mini-css-extract-plugin\nexport default {\"DeleteBtn\":\"ContactListItem_DeleteBtn__F4g0W\",\"EditBtn\":\"ContactListItem_EditBtn__DyTCm\",\"Wrapper\":\"ContactListItem_Wrapper__igvXg\",\"Info\":\"ContactListItem_Info__SI-3+\",\"Label\":\"ContactListItem_Label__6X-PI\",\"Data\":\"ContactListItem_Data__gzJJ7\"};","import { useDeleteContactMutation } from 'redux/contactsSlice';\nimport { BsTrash3 } from 'react-icons/bs';\nimport { AiFillEdit } from 'react-icons/ai';\nimport css from './ContactListItem.module.css';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { setShowEditModal } from 'redux/showEditModalSlice';\n\nexport const ContactListItem = ({ item, getContactId }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    deleteContact(item.id);\n    toast.success('Contact deleted!');\n  };\n\n  const editClickHandler = () => {\n    dispatch(setShowEditModal());\n    getContactId(item.id);\n\n  };\n\n  return (\n    <div className={css.Wrapper}>\n      <button\n        className={css.DeleteBtn}\n        onClick={() => clickHandler(item.id)}\n        disabled={isLoading}\n      >\n        <BsTrash3 />\n      </button>\n      <button\n        className={css.EditBtn}\n        onClick={() => editClickHandler(item.id)}\n        disabled={isLoading}\n      >\n        <AiFillEdit />\n      </button>\n      <div className={css.Contacts}>\n        <p className={css.Info}>\n          <span className={css.Label}>Name:</span>{' '}\n          <span className={css.Data}>{item.name}</span>\n        </p>\n        <p className={css.Info}>\n          <span className={css.Label}>Phone:</span>\n          <span className={css.Data}>{item.number}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Edit_Overlay__CksCW\",\"Modal\":\"Edit_Modal__5iFin\",\"FeedbackForm\":\"Edit_FeedbackForm__4X+4N\",\"InputForm\":\"Edit_InputForm__PujB7\",\"ButtonSubmit\":\"Edit_ButtonSubmit__pavkw\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Edit.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { setShowEditModal } from 'redux/showEditModalSlice';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction ModalEdit({ children }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // console.log(\"Mounting phase: same when componentDidMount runs\");\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      //   console.log(\"Unmounting phase: same when componentWillUnmount runs\");\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(setShowEditModal());\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      dispatch(setShowEditModal());\n    }\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={css.Modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport default ModalEdit;\n","import { useState } from 'react';\nimport css from './Edit.module.css';\nimport { useDispatch } from 'react-redux';\nimport { useUpdateContactMutation } from 'redux/contactsSlice';\nimport toast from 'react-hot-toast';\nimport { setShowEditModal } from 'redux/showEditModalSlice';\n\nexport default function FormEdit({ contactId }) {\n  \n  console.log('contact id in EDIT', contactId)\n//   const { data: contact } = useGetContactByIdQuery(contactId);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [updateContact] = useUpdateContactMutation();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      await updateContact({ name: name, number: number, id: contactId });\n      toast.success('Contact updated!');\n      dispatch(setShowEditModal());\n      reset();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.FeedbackForm}>\n        <label htmlFor={name}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n         //   placeholder={contact.name}\n          id={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.InputForm}\n        />\n\n        <label htmlFor={number}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n         //   placeholder={contact.phone}\n          id={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.InputForm}\n        />\n        <button type=\"submit\" className={css.ButtonSubmit}>\n          Save changes\n        </button>\n      </form>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"FeedbackForm\":\"Form_FeedbackForm__qSJZh\",\"InputForm\":\"Form_InputForm__jC+7+\",\"ButtonSubmit\":\"Form_ButtonSubmit__q9Pxs\"};","import { useState } from 'react';\nimport css from './Form.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setShowModal } from 'redux/showModalSlice';\n// import 'react-toastify/dist/ReactToastify.min.css';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsSlice';\nimport toast from 'react-hot-toast';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [addContact] = useAddContactMutation();\n\n  const { data: contacts } = useGetContactsQuery();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const check = contacts.find(contact => contact.name === name);\n    if (check) {\n      toast.error(`${name} is already in contacts`);\n    } else {\n\t\tconsole.log(\"name number\", name, number )\n      addContact({ name, number });\n      toast.success('Contact added!');\n\n      dispatch(setShowModal());\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.FeedbackForm}>\n      <label htmlFor={name}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        className={css.InputForm}\n      />\n\n      <label htmlFor={number}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        id={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        className={css.InputForm}\n      />\n      <button type=\"submit\" className={css.ButtonSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Modal_Overlay__yoxbg\",\"Modal\":\"Modal_Modal__I1UYJ\"};","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setShowModal } from 'redux/showModalSlice';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ children }) {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // console.log(\"Mounting phase: same when componentDidMount runs\");\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      //   console.log(\"Unmounting phase: same when componentWillUnmount runs\");\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      dispatch(setShowModal());\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      dispatch(setShowModal());\n    }\n  };\n\n  return createPortal(\n    <div className={css.Overlay} onClick={handleBackdropClick}>\n      <div className={css.Modal}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport css from './ContactList.module.css';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport ContactListItem from 'components/ContactListtem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport ModalEdit from 'components/FormEdit/ModalEdit';\nimport FormEdit from 'components/FormEdit/FormEdit';\nimport Form from 'components/Form/Form';\nimport Modal from 'components/Modal/Modal';\n\nexport const ContactList = () => {\n  const { data, error, isLoading } = useGetContactsQuery();\n  console.log('get contacts', data);\n  const showModal = useSelector(state => state.showModal);\n  const showEditModal = useSelector(state => state.showEditModal);\n  console.log('ConTaCts', data);\n\n  const filter = useSelector(state => state.filter);\n\n  const [editingContactId, setEditContactId] = useState('');\n  const getContactId = contactid => {\n    setEditContactId(contactid);\n  };\n\n  function getFilteredContacts() {\n    if (data) {\n      return data.filter(item =>\n        (item.name ?? 'unknown').toLowerCase().includes(filter)\n      );\n    } else {\n      return data;\n    }\n  }\n\n  const filteredContacts = getFilteredContacts();\n  console.log('filtereD', filteredContacts);\n\n  return (\n    <>\n      {error && 'ERROR(('}\n      {isLoading ? (\n        <div className={css.Spinner}>Loading...</div>\n      ) : (\n        <div className={css.Container}>\n          <ul className={css.List}>\n            {filteredContacts.map(item => (\n              <li key={item.id} className={css.Item}>\n                <ContactListItem item={item} getContactId={getContactId} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showModal && (\n        <Modal>\n          <Form />\n        </Modal>\n      )}\n      {showEditModal && (\n        <ModalEdit>\n          <FormEdit contactId={editingContactId} />\n        </ModalEdit>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"AddBtn\":\"AddBtn_AddBtn__LpPx-\"};","import { useDispatch } from 'react-redux';\nimport { setShowModal } from 'redux/showModalSlice';\nimport css from './AddBtn.module.css';\n\nconst AddBtn = () => {\n  const dispatch = useDispatch();\n  const toggleModal = () => {\n    dispatch(setShowModal());\n  };\n\n  return (\n    <button className={css.AddBtn} onClick={toggleModal}>\n      ADD CONTACT\n    </button>\n  );\n};\n\nexport default AddBtn;\n","import { ContactList } from 'components/ContactList/ContactsList';\nimport AddBtn from 'components/AddBtn/AddBtn';\nimport css from './Pages.module.css'\n\nexport default function Contacts() {\n  return (\n    <div className={css.Container}>\n      {/* <h2>Your contacts</h2> */}\n      <AddBtn />\n      <ContactList />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Pages_Container__HXCJw\",\"HomeContainer\":\"Pages_HomeContainer__iltyQ\",\"HomeTitle\":\"Pages_HomeTitle__qumr-\"};"],"names":["item","getContactId","useDeleteContactMutation","deleteContact","isLoading","dispatch","useDispatch","className","css","onClick","id","toast","disabled","setShowEditModal","name","number","modalRoot","document","querySelector","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","event","currentTarget","target","FormEdit","contactId","console","log","useState","setName","setNumber","useUpdateContactMutation","updateContact","handleChange","value","handleSubmit","preventDefault","reset","onSubmit","htmlFor","type","onChange","pattern","title","required","Form","useAddContactMutation","addContact","contacts","useGetContactsQuery","data","find","contact","setShowModal","ContactList","error","showModal","useSelector","state","showEditModal","filter","editingContactId","setEditContactId","contactid","filteredContacts","toLowerCase","includes","map","Contacts"],"sourceRoot":""}